{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","components/TodoItem/TodoItem.tsx","components/NoTodosMessage/NoTodosMessage.tsx","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","utils/functions.ts","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","initialState","query","status","filterReducer","todosReducer","filter","id","rootReducer","combineReducers","currentTodo","todos","store","createStore","composeWithDevTools","applyMiddleware","thunk","TodoItem","setCurrent","className","completed","cn","title","onClick","NoTodosMessage","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","set","newTodo","currenTodoActions","length","map","options","TodoFilter","setQuery","newQuery","filterActions","onSubmit","event","preventDefault","value","toLowerCase","onChange","newStatus","currentTarget","option","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","useState","isLoading","setIsLoading","user","setUser","useEffect","userId","finally","href","email","name","App","visibleTodos","todosCopy","normalizedQuery","includes","filterTodosByStatus","filterTodos","data","todosActions","currentTodoActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2aea0305.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQueryAction = {\n  type: 'filter/query/SET',\n  payload: string,\n};\n\nconst setQuery = (payload: string): SetQueryAction => ({\n  type: 'filter/query/SET',\n  payload,\n});\n\ntype SetStatusAction = {\n  type: 'filter/status/SET',\n  payload: Status,\n};\n\nconst setStatus = (payload: Status): SetStatusAction => ({\n  type: 'filter/status/SET',\n  payload,\n});\n\nexport const actions = { setQuery, setStatus };\n\ntype Action = SetQueryAction | SetStatusAction;\ntype State = {\n  query: string,\n  status: Status,\n};\n\nconst initialState: State = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (\n  state: State = initialState,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'filter/query/SET':\n      return { ...state, query: action.payload };\n\n    case 'filter/status/SET':\n      return { ...state, status: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddTodosAction = {\n  type: 'todos/ADD',\n  payload: Todo,\n};\n\nconst add = (payload: Todo): AddTodosAction => ({\n  type: 'todos/ADD',\n  payload,\n});\n\ntype RemoveTodosAction = {\n  type: 'todos/REMOVE',\n  payload: number,\n};\n\nconst remove = (payload: number): RemoveTodosAction => ({\n  type: 'todos/REMOVE',\n  payload,\n});\n\ntype SetTodosAction = {\n  type: 'todos/SET',\n  payload: Todo[],\n};\n\nconst set = (payload: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload,\n});\n\nexport const actions = { add, remove, set };\n\ntype Action = AddTodosAction | RemoveTodosAction | SetTodosAction;\n\nconst todosReducer = (\n  state: Todo[] = [],\n  action: Action,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n\n    case 'todos/ADD':\n      return [...state, action.payload];\n\n    case 'todos/REMOVE':\n      return state.filter(todo => todo.id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  setCurrent: (newTodo: Todo) => {},\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  setCurrent,\n}) => {\n  return (\n    <tr data-cy=\"todo\">\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed\n          && (\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={cn({\n          'has-text-danger': !todo.completed,\n          'has-text-success': todo.completed,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setCurrent(todo)}\n        >\n          <span className=\"icon\">\n            <i className=\"far fa-eye\" />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","export const NoTodosMessage: React.FC = () => {\n  return (\n    <p className=\"notification is-warning\">\n      There are no todos matching current filter criteria\n    </p>\n  );\n};\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { NoTodosMessage } from '../NoTodosMessage';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions as currenTodoActions } from '../../features/currentTodo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const dispatch = useAppDispatch();\n\n  const set = (newTodo: Todo) => dispatch(currenTodoActions.setTodo(newTodo));\n\n  return (\n    <>\n      {todos.length ? (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todos.map(todo => (\n              <TodoItem\n                key={todo.id}\n                todo={todo}\n                setCurrent={set}\n              />\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <NoTodosMessage />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nconst options = [\n  'All',\n  'Active',\n  'Completed',\n];\n\nexport const TodoFilter: React.FC = () => {\n  const { query, status } = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  const setQuery = (newQuery: string) => {\n    return dispatch(filterActions.setQuery(newQuery));\n  };\n\n  const setStatus = (newStatus: Status) => {\n    return dispatch(filterActions.setStatus(newStatus));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status.toLowerCase()}\n            onChange={event => setStatus(event.currentTarget.value as Status)}\n          >\n            {options.map(option => (\n              <option\n                key={option}\n                value={option.toLowerCase()}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.currentTarget.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          <button\n            aria-label=\"clearquery\"\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  onClose: () => {},\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onClose,\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setUser)\n      .finally(() => setIsLoading(false));\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            <button\n              aria-label=\"close\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\nimport { actions as todosActions } from './features/todos';\nimport { actions as currentTodoActions } from './features/currentTodo';\nimport { filterTodos } from './utils/functions';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const filter = useAppSelector(state => state.filter);\n  const [isLoading, setIsLoading] = useState(true);\n  const dispatch = useAppDispatch();\n  const todos = useAppSelector(state => state.todos);\n\n  const visibleTodos: Todo[] = filterTodos(todos, filter);\n\n  useEffect(() => {\n    getTodos().then((data) => {\n      dispatch(todosActions.set(data));\n    })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const removeCurrentTodo = () => dispatch(currentTodoActions.removeTodo());\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList todos={visibleTodos} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo\n        && (\n          <TodoModal\n            todo={currentTodo}\n            onClose={removeCurrentTodo}\n          />\n        )}\n    </>\n  );\n};\n","import { Status } from '../types/Status';\nimport { Todo } from '../types/Todo';\n\ntype FilterParams = {\n  query: string,\n  status: Status,\n};\n\nconst filterTodosByStatus = (todos: Todo[], status: Status): Todo[] => {\n  switch (status) {\n    case 'active':\n      return todos.filter(todo => !todo.completed);\n\n    case 'completed':\n      return todos.filter(todo => todo.completed);\n\n    default:\n      return todos;\n  }\n};\n\nexport const filterTodos = (\n  todos: Todo[],\n  { query, status }: FilterParams,\n): Todo[] => {\n  let todosCopy = [...todos];\n\n  if (query) {\n    const normalizedQuery = query.toLowerCase();\n\n    todosCopy = todosCopy.filter(todo => {\n      const normalizedTitle = todo.title.toLowerCase();\n\n      return normalizedTitle.includes(normalizedQuery);\n    });\n  }\n\n  if (status) {\n    todosCopy = filterTodosByStatus(todosCopy, status);\n  }\n\n  return todosCopy;\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}